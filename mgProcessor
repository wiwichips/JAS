#!/bin/bash

#
# global variables
#

ID=$1
serverPID=$2

FIFO_P="/tmp/processor-${ID}-${USER}-fifo"
FIFO_P_STATUS="/tmp/processor-${ID}-status-${USER}-fifo"

idle=1

#
# functions
#

function makeIdle {
  idle=1
  kill -12 $serverPID
}

function makeBusy {
  idle=0
}

function sendStatus {
  # output on the fifo to the server ONLY when signaled by the server
  echo $idle > $FIFO_P_STATUS &

  # let the server know that its ready 
  kill -10 $serverPID
}

function executeCommand {
  ./runProc $$ $1 &
}

function processInput {
  line=$1
  
  # set the processor to busy
  makeBusy

  # execute the line
  executeCommand "$line"
}

#
# traps
#

# runProc tells the processor the job is done
trap makeIdle SIGUSR2

# this is for when the server requests the status of mgProcessor
trap sendStatus SIGUSR1

#
# main
#

# write the PID to the status fifo to initialize the signal sending
echo $$ > $FIFO_P_STATUS

# read every line from the fifo - sever will only send a line when idle
while read line < $FIFO_P
do
	if [ "$line" = 'exit' ]
	then
		break
	fi

	processInput "$line"
done
