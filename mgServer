#!/bin/sh

# set up some globals
FIFO_S="/tmp/server-${USER}-fifo"
FIFO_P="/tmp/processor-${USER}-fifo"

# calculate default number of processors
numCPU=$(getconf _NPROCESSORS_ONLN) # tested on MAC OS

# process command line options (so that number of processors can be overridden)
PRINT_HELP="NO"
# check for the flags and options passed
for arg in "$@"
do
	case "${arg}" in
	-[h?]*)
		PRINT_HELP="YES"
		;;
	-*)
		echo "Unknown option '${arg}'" >&2
        exit -1
		;;
	*)
		echo "Unknown argument '${arg}'" >&2
        exit -1
		;;
	esac
done


# if help was requested, print it to stderr and exit
if [ X"$PRINT_HELP" = X"YES" ]
then
    echo "$0 <options>" >&2
    echo "Option:" >&2
    echo "-h    : help - this is it" >&2
    echo "-n<N> : set the number of processing units to <N>" >&2
    exit -1
fi

#
# create the fifos (numCPU * 2 + 1 in total)
#

# create the server fifo and processor fifo
mkfifo $FIFO_S
mkfifo $FIFO_P

# start running processors depending on the number of processors
for i in $(seq $numCPU)
do
	
done

# call scheduler script
./scheduler.bash $numCPU